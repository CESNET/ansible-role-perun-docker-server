- name: "add unaccent extension"
  become: yes
  become_user: postgres
  postgresql_ext:
    db: "perun"
    name: unaccent

- name: "detect whether table users exists and contains rows"
  become: yes
  become_user: postgres
  postgresql_query:
    session_role: perun
    db: perun
    query: "SELECT EXISTS ( SELECT 1 FROM information_schema.tables WHERE table_schema = 'perun' AND table_name = 'users' )"
  register: table_users

- name: "download SQL script for creating tables"
  get_url:
    url: "https://raw.githubusercontent.com/CESNET/perun/{{ perun_rpc_version }}/perun-db/postgres.sql"
    dest: /tmp/postgres.sql
  when: not table_users.query_result[0].exists

- name: "create perun tables"
  become: yes
  become_user: postgres
  postgresql_query:
    session_role: perun
    db: perun
    path_to_script: /tmp/postgres.sql
  when: not table_users.query_result[0].exists

- name: "create initial users in database"
  become: yes
  become_user: postgres
  postgresql_query:
    autocommit: yes
    session_role: perun
    db: perun
    query: |
     insert into perun.ext_sources (id,name,type) values (nextval('ext_sources_id_seq'),'INTERNAL','cz.metacentrum.perun.core.impl.ExtSourceInternal');
     insert into perun.users (id, first_name, last_name) values (nextval('users_id_seq'),'Master','Perun');
     insert into perun.user_ext_sources (id, user_id, login_ext, ext_sources_id, loa) values (nextval('user_ext_sources_id_seq'), currval('users_id_seq'), 'perun', currval('ext_sources_id_seq'), 0);
     insert into perun.auditer_consumers (id, name, last_processed_id) values (nextval('auditer_consumers_id_seq'), '127.0.0.1:6071', 0);
     insert into perun.auditer_consumers (id, name, last_processed_id) values (nextval('auditer_consumers_id_seq'), 'ldapcConsumer', 0);
     insert into perun.auditer_consumers (id, name, last_processed_id) values (nextval('auditer_consumers_id_seq'), 'notifications', 0);
  when: not table_users.query_result[0].exists
