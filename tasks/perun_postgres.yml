- name: "add unaccent extension"
  become: yes
  become_user: postgres
  postgresql_ext:
    db: "perun"
    name: unaccent

- name: "detect whether table users exists"
  become: yes
  become_user: postgres
  postgresql_query:
    session_role: perun
    db: perun
    query: "SELECT EXISTS ( SELECT 1 FROM information_schema.tables WHERE table_schema = 'perun' AND table_name = 'users' )"
  register: table_users

- name: "download SQL script for creating tables"
  get_url:
    url: "https://raw.githubusercontent.com/CESNET/perun/{{ perun_rpc_git_version }}/perun-db/postgres.sql"
    dest: /tmp/postgres.sql
  when: not table_users.query_result[0].exists

- name: "create perun tables"
  become: yes
  become_user: postgres
  postgresql_query:
    session_role: perun
    db: perun
    path_to_script: /tmp/postgres.sql
  when: not table_users.query_result[0].exists

- name: "create /var/lib/postgresql/dump_psql_db.sh file"
  copy:
    dest: /var/lib/postgresql/dump_psql_db.sh
    owner: postgres
    group: postgres
    mode: 0550
    content: |
      #!/bin/bash
      if [ -z "$1" ] ; then
        echo "Usage: $0 db_name"
        exit 1
      fi
      DBNAME="$1"
      FILENAME="$DBNAME"_`date +"%Y-%m-%d-%H-%M-%S"`.sql.xz
      echo "dumping PostgreSQL database $DBNAME into $PWD/$FILENAME ..."
      export LANG=cs_CZ.UTF-8
      pg_dump $DBNAME | xz -T $(($(nproc)-2)) -3 >"$FILENAME"

- name: "create /etc/cron.d/perundb-backup"
  cron:
    name: "Every Sunday night do backup of the Perun db"
    cron_file: perundb-backup
    weekday: "sun"
    hour: "23"
    minute: "20"
    user: postgres
    job: "cd /var/lib/postgresql; ./dump_psql_db.sh perun"
