
- name: "create /etc/perun/perun-cli-env"
  template:
    src: perun-cli-env.j2
    dest: /etc/perun/perun-cli-env
    owner: perun
    group: perun
    mode: '0440'

- name: "create /usr/local/bin/perun-cli"
  copy:
    dest: /usr/local/bin/perun-cli
    owner: perun
    group: perun
    mode: '0550'
    content: |
      #!/bin/bash
      # runs an interactive container with current working dir and all arguments are passed to "bash -c " as a single long string
      if [[ -z $* ]] ; then ARGS="bash" ; else ARGS="$*" ; fi
      docker run -it --rm --name cli_$$ --volume /home/perun:/home/perun \
        --env-file /etc/perun/perun-cli-env -w $PWD ${PERUN_DOCKER_OPTS} \
        registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_cli_perl:{{ perun_cli_container_version }} "$ARGS"

- name: "create /usr/local/bin/perun-script-cli for scripts"
  copy:
    dest: /usr/local/bin/perun-script-cli
    owner: perun
    group: perun
    mode: '0550'
    content: |
      #!/bin/bash
      # runs non-interactive container with working dir /home/perun and arguments are passed as an array to exec
      docker run --rm --name script_cli_$$ --volume /home/perun:/home/perun \
        --env-file /etc/perun/perun-cli-env --entrypoint="" ${PERUN_DOCKER_OPTS} \
        registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_cli_perl:{{ perun_cli_container_version }} "$@"

- name: "preload image for perun_cli"
  docker_image:
    name: "registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_cli_perl:{{ perun_cli_container_version }}"
    source: pull
    state: present