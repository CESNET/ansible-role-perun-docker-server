- name: "create /etc/perun/apache/sites-enabled directory"
  file:
    path: /etc/perun/apache/sites-enabled
    state: directory

- name: "create /etc/perun/apache/maintenance directory"
  file:
    path: /etc/perun/apache/maintenance
    state: directory

- name: "install prerequisite for htpasswd task"
  package:
    name: python-passlib
    state: present

- name: "add common passwords into /etc/perun/apache/perun.passwd"
  htpasswd:
    path: "/etc/perun/apache/perun.passwd"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: root
    group: root
    mode: 0644
  loop:
    - { name: "perun", password: "{{ perun_apache.basicAuth.common.perun }}" }
    - { name: "perun-engine", password: "{{ perun_apache.basicAuth.common['perun-engine'] }}" }
  loop_control:
    label: "{{ item.name }}"

- name: "add additional passwords into /etc/perun/apache/perun.passwd"
  htpasswd:
    path: "/etc/perun/apache/perun.passwd"
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    owner: root
    group: root
    mode: 0644
  loop: "{{ perun_apache.basicAuth.additional }}"
  loop_control:
    label: "{{ item.name }}"

- name: "install HTML pages for maintenance (contain perun_email {{ perun_email }})"
  template:
    src: "{{ item }}"
    dest: /etc/perun/apache/maintenance/
    mode: 0644
  with_fileglob:
    - "templates/maintenance/*"

- name: "create /etc/perun/apache/instanceConfig.json"
  template:
    src: instanceConfig.json
    dest: /etc/perun/apache/

- name: "create /etc/perun/apache/sites-enabled/000-perun.conf"
  template:
    src: perun.conf.j2
    dest: /etc/perun/apache/sites-enabled/000-perun.conf
  notify: "restart perun_apache"

- name: "create /etc/perun/apache/sites-enabled/perun-ngui.conf"
  template:
    src: perun-ngui.conf.j2
    dest: /etc/perun/apache/sites-enabled/perun-ngui.conf
  notify: "restart perun_apache"