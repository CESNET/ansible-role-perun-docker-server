- name: "install PostgreSQL"
  import_role:
    name: cesnet.postgresql
  vars:
    postgresql_version: "{{ perun_postgresql_version }}"
    postgresql_certificate_file: "{{ perun_certificate_file }}"
    postgresql_certificate_key_file: "{{ perun_certificate_key_file }}"
    postgresql_certificate_chain_file: "{{ perun_certificate_chain_file }}"
    postgresql_db_user_password: "{{ perun_postgresql_db_user_password }}"
    postgresql_settings: "{{ perun_postgresql_settings }}"
    postgresql_daily_backup: yes
    postgresql_daily_backup_more_commands: "{{ perun_postgresql_daily_backup_more_commands }}"
    postgresql_hold_upgrades: yes
    postgresql_db_user: "perun"
    postgresql_db_name: "perun"

- name: "install postgresql-{{ perun_postgresql_version }}-repack"
  apt:
    name: "postgresql-{{ perun_postgresql_version }}-repack"
    state: present

- name: "install pipe viewer"
  apt:
    name: pv
    state: present

- name: "make list of packages for holding"
  set_fact:
    psql_packages:
      - "postgresql-{{ perun_postgresql_version }}"
      - "postgresql-client-{{ perun_postgresql_version }}"
      - "postgresql-{{ perun_postgresql_version }}-repack"
      - postgresql-client-common
      - postgresql-common
- debug:
    var: psql_packages

- name: "Hold postgresql packages from upgrading"
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ psql_packages }}"

- name: "get perun_net info"
  docker_network_info:
    name: perun_net
  register: perun_net_info

- name: "add row to pg_hba.conf allowing unencrypted connections from perun containers"
  postgresql_pg_hba:
    dest: "/etc/postgresql/{{ perun_postgresql_version }}/main/pg_hba.conf"
    contype: host
    databases: perun
    users: perun
    address: "{{ perun_net_info.network.IPAM.Config[0].Subnet }}"
    method: md5
  register: pghba_file

- name: "restart postgres"
  when: pghba_file.changed
  service:
    name: postgresql
    state: restarted

- name: "add extensions"
  become: yes
  become_user: postgres
  postgresql_ext:
    db: "perun"
    name: "{{ item }}"
  loop:
    - unaccent
    - pgcrypto
    - pg_repack
