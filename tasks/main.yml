---
- name: "Ansible core version check ({{ ansible_version.full }})"
  assert:
    that:
      - ansible_version is defined
      - ansible_version.full is version_compare('2.14.3', '>=')
    msg: "Required version is 2.14.3, this is {{ ansible_version.full }}"
    quiet: true
  tags: always

- name: "Collection community.general version check ({{ lookup('community.general.collection_version', 'community.general') }})"
  assert:
    that:
      - lookup('community.general.collection_version', 'community.general') is version('6.4.0','>=')
    msg: "Required version is 6.4.0, this is {{lookup('community.general.collection_version', 'community.general') }}"
    quiet: true
  tags: always

- name: "Debian version check ({{ ansible_distribution_major_version }})"
  assert:
    that:
      - ansible_distribution == "Debian"
      - ansible_distribution_major_version is version('10','>=')
    msg: "Required version is 10, this is {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
    quiet: true
  tags: always

- name: "get OS service facts"
  service_facts:
  tags: always

- name: "message-of-the-day setup"
  copy:
    src: motd
    dest: /etc/motd
  tags: motd

- name: "TLS certificates setup"
  import_tasks: perun_certs.yml
  tags: perun_certs

- name: "Operating System setup (yubikeys, monitoring)"
  import_tasks: os_setup.yml
  tags: os_setup

- name: "install firewall"
  import_role:
    name: cesnet.firewall
  vars:
    firewall_do_install: true
    firewall_do_config: false

- name: "syslog setup"
  import_tasks: perun_syslog.yml
  tags: perun_syslog

- name: "creation of users perun, peruneng, etc."
  import_tasks: perun_users.yml
  tags: perun_users

- name: "Postgres server setup"
  import_tasks: postgres.yml
  tags: postgresql

- name: "Postgres perun db setup"
  import_tasks: perun_postgres.yml
  tags: perun_postgres

- name: "Docker and Portainer setup"
  import_tasks: perun_docker.yml
  tags: perun_docker

- name: "compute firewall rules"
  tags: firewall
  block:
    - name: "get perun_net info"
      docker_network_info:
        name: perun_net
      register: perun_net_info
    - name: "compute facts"
      set_fact:
        perun_firewall_perun_net_related_rules:
          - { port: 25, ipv4: "{{ perun_net_info.network.IPAM.Config[0].Subnet }}", comment: "accept SMTP from docker subnet" }
          - { port: 389, ipv4: "{{ perun_net_info.network.IPAM.Config[0].Subnet }}", comment: "accept non-encrypted ldap from docker subnet"}
          - { port: 5432, ipv4: "{{ perun_net_info.network.IPAM.Config[0].Subnet }}", comment: "accept postgres from docker subnet" }

- name: "set firewall rules"
  import_role:
    name: cesnet.firewall
  vars:
    firewall_do_install: false
    firewall_do_config: true
    firewall_open_tcp_ports: "{{ perun_firewall_open_tcp_ports + perun_firewall_perun_net_related_rules + site_specific_open_tcp_ports }}"
    firewall_docker_rules: "{{ perun_firewall_docker_rules }}"

- name: "sendmail setup for Dockerized environment (legacy)"
  when: not perun_smtp_use_msmtp
  include_role:
    name: cesnet.sendmail_for_docker
    apply: { tags: [ 'sendmail_for_docker'] }
  tags: [ 'sendmail_for_docker']
  vars:
    sendmail_for_docker_hostname: "{{ perun_rpc_hostname }}"
    sendmail_for_docker_bridge_network_name: perun_net
    sendmail_for_docker_config: "{{ perun_sendmail_config }}"

- name: "msmtp MTA setup (forwarding emails to a SMTP relay)"
  when: perun_smtp_use_msmtp
  include_role:
    name: cesnet.msmtp
    apply: { tags: [ 'msmtp'] }
  tags: [ 'msmtp']
  vars:
    msmtp_listen_interface: 0.0.0.0
    msmtp_config: "{{ perun_msmtp_config }}"

- name: "OpenLDAP directory server installation"
  include_role:
    name: cesnet.openldap
    apply:
      tags:
        - perun_ldap
  when: perun_ldap_local
  vars:
    ldap_domain: "{{ perun_ldap_domain }}"
    ldap_top_organization: perun
    ldap_data_password: "{{ perun_ldap_data_password }}"
    ldap_config_password: "{{ perun_ldap_config_password }}"
    ldap_hold_package: yes
    ldap_certificate_file: "{{ perun_certificate_file }}"
    ldap_certificate_key_file: "{{ perun_certificate_key_file }}"
    ldap_certificate_chain_file: "{{ perun_certificate_chain_file }}"
    ldap_access_rules_set: no
    ldap_size_limit: "{{ perun_ldap_size_limit }}"
    ldap_master_replica: "{{ perun_ldap_master_replica }}"
    ldap_replication_password: "{{ perun_ldap_replication_password }}"
    ldap_users: "{{ perun_ldap_users }}"
  tags:
    - perun_ldap

- name: "prepare vars for perun_config"
  import_tasks: perun_config.yml
  tags:
    - perun_config
    - perun_rpc
    - perun_ldapc
    - perun_apache

- name: "OpenLDAP Perun specific settings"
  include_role:
    name: cesnet.perun_ldap_config
    apply:
      tags:
        - perun_ldap
        - perun_config
        - perun_ldap_config
  tags:
    - perun_ldap
    - perun_config
    - perun_ldap_config
  vars:
    perun_ldap_schemas_perun_version: "{{ perun_rpc_git_version }}"
  when: perun_ldap_local

- name: "setup of Docker data volumes for Perun containers"
  import_tasks: perun_volumes.yml
  tags: perun_volumes

- name: "site-specific tasks before perun config"
  when: perun_site_specific_tasks_before is defined
  include_tasks:
    file: "files/{{ perun_instance_hostname}}/{{ perun_site_specific_tasks_before }}"
    apply:
      tags:
        - site_specific
        - site_specific_before
  tags:
    - site_specific
    - site_specific_before

- name: "perun rpc setup"
  import_tasks: perun_rpc.yml
  tags:
    - perun_rpc
    - perun_config

- name: "perun engine setup"
  import_tasks: perun_engine.yml
  tags:
    - perun_engine
    - perun_config

- name: "perun ldapc setup"
  include_tasks:
    file: perun_ldapc.yml
    apply:
      tags:
        - perun_ldapc
        - perun_config
  tags:
    - perun_ldapc
    - perun_config

- name: "perun apache setup"
  import_tasks: perun_apache.yml
  tags:
    - perun_apache
    - perun_config

- name: "perun CLI setup"
  import_tasks: perun_cli.yml
  tags:
    - perun_cli
    - perun_config

- name: "syslog setup after containers"
  import_tasks: perun_syslog_containers.yml
  tags: perun_syslog


- name: "site-specific tasks after perun config"
  when: perun_site_specific_tasks_after is defined
  include_tasks:
    file: "files/{{ perun_instance_hostname}}/{{ perun_site_specific_tasks_after }}"
    apply:
      tags:
        - site_specific
        - site_specific_after
  tags:
    - site_specific
    - site_specific_after