# install Portainer web app for managing containers
- name: "create volume for portainer"
  docker_volume:
    name: portainer_data

- name: "create password file"
  copy:
    dest: "{{ perun_certs_dir }}/portainer_admin_password.txt"
    content: "{{ perun_portainer_admin_password }}"

- name: "install portainer container"
  docker_container:
    name: portainer
    image: portainer/portainer
    pull:  yes
    restart_policy: always
    command: "-H unix:///var/run/docker.sock --ssl --sslcert {{ perun_certificate_fullchain_file }} --sslkey {{ perun_certificate_key_file }} --admin-password-file {{ perun_certs_dir }}/portainer_admin_password.txt"
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
      - "{{ perun_certs_dir }}:{{ perun_certs_dir }}:ro"

- name: "login into gitlab docker registry"
  docker_login:
    registry_url: "registry.gitlab.ics.muni.cz:443"
    username: "gitlab-read-only-deploy-token-perun-docker"
    password: "K3tG1Np-yLVWB51jj3bB"

- name: "create a local Docker network for Perun"
  docker_network:
    name: perun_net
    driver_options:
      com.docker.network.driver.mtu: 1442
    ipam_config:
      - subnet: 192.168.0.0/24
        gateway: 192.168.0.1

- name: "create Perun engine container"
  docker_container:
    name: perun_engine
    image: "registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_engine:{{ perun_engine_container_version }}"
    pull: yes
#    restart_policy: always
    mounts:
      - { type: volume, source: peruneng_logs, target: /var/log/perun }
      - { type: volume, source: peruneng_home, target: /home/perun }
      - { type: volume, source: peruneng_etc,  target: /etc/perun }
    networks_cli_compatible: yes
    networks:
      - name: perun_net

- name: "create Perun RPC container"
  docker_container:
    name: perun_rpc
    image: "registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_rpc:{{ perun_rpc_container_version }}"
    pull: yes
    #    restart_policy: always
    mounts:
      - { type: volume, source: perunrpc_logs, target: /var/log/perun }
      - { type: volume, source: perunrpc_home, target: /home/perun }
      - { type: volume, source: perunrpc_etc, target: /etc/perun }
    networks_cli_compatible: yes
    networks:
      - name: perun_net

- name: "create Perun Apache container"
  docker_container:
    name: perun_apache
    image: "registry.gitlab.ics.muni.cz:443/perun/perun_docker/perun_apache:{{ perun_apache_container_version }}"
    pull: yes
    #    restart_policy: always
    mounts:
      - { type: volume, source: apache_logs, target: /var/log/apache2 }
      - { type: bind, source: /etc/perun/ssl, target: /etc/perun/ssl, read_only: yes }
      - { type: bind, source: /etc/perun/apache, target: /etc/perun/apache, read_only: yes }
    networks_cli_compatible: yes
    networks:
      - name: perun_net
    ports:
      - 80:80
      - 443:443
