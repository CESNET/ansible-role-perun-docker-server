- name: "restart perun_rpc"
  docker_container:
    name: perun_rpc
    state: started
    restart: yes
    container_default_behavior: no_defaults
  when: perun_rpc_container is defined and not perun_rpc_container.changed

- name: "restart perun_apache"
  docker_container:
    name: perun_apache
    state: started
    restart: yes
    container_default_behavior: no_defaults
  when: perun_apache_container is defined and perun_apache_container.container is defined and perun_apache_container.container and not perun_apache_container.changed

- name: "restart perun_engine"
  docker_container:
    name: perun_engine
    state: started
    restart: yes
    container_default_behavior: no_defaults
  when: perun_engine_enabled and perun_engine_container is defined and not perun_engine_container.changed

- name: "restart perun_ldapc"
  docker_container:
    name: perun_ldapc
    state: started
    restart: yes
    container_default_behavior: no_defaults
  when: perun_ldapc_enabled and perun_ldapc_container is defined and not perun_ldapc_container.changed

- name: "restart portainer"
  docker_container:
    name: portainer
    state: started
    restart: yes
    container_default_behavior: no_defaults
  when: portainer_container is defined and portainer_container.container is defined and portainer_container.container and not portainer_container.changed

- name: "restart ldap"
  service:
    name: slapd
    state: restarted
  when: ansible_facts.services['slapd'] is defined and ansible_facts.services['slapd'].state=='running'

- name: "restart postgres"
  service:
    name: postgresql
    state: restarted
  when: ansible_facts.services['postgresql'] is defined and ansible_facts.services['postgresql'].state=='running'

- name: "restart sshd"
  service:
    name: sshd
    state: restarted

- name: "reload syslog-ng"
  service:
    name: syslog-ng
    state: reloaded
