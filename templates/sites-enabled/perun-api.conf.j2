{{ ansible_managed | comment }}

####
# Perun RPC API without CSRF protection
####

<VirtualHost *:80>
    ServerAdmin {{ perun_email }}
    ServerName {{ perun_api_hostname }}
{% for alias in perun_api_hostname_aliases %}
    ServerAlias {{ alias }}
{% endfor %}
    Redirect / https://{{ perun_api_hostname }}/
</VirtualHost>

<VirtualHost *:443>
    ServerAdmin {{ perun_email }}
    ServerName {{ perun_api_hostname }}
{% for alias in perun_api_hostname_aliases %}
    ServerAlias {{ alias }}
{% endfor %}

    DocumentRoot /var/www/html
    <Directory "/var/www/html">
        Options -Indexes +FollowSymLinks -MultiViews
        Require all granted
    </Directory>

    Alias /.well-known /etc/perun/apache/well-known
    <Directory "/etc/perun/apache/well-known">
        Options -Indexes -FollowSymLinks -MultiViews
        Require all granted
    </Directory>

    # GENERIC ERRORS
    ErrorDocument 401 /maintenance/401.html
    ErrorDocument 403 /maintenance/403.html
    ErrorDocument 404 /maintenance/404.html
    ErrorDocument 500 /maintenance/500.html
    ErrorDocument 503 /maintenance/503.html

    RewriteEngine On

    ProxyIOBufferSize 65536

    SSLEngine on
{% if perun_use_certbot_certificates %}
    SSLCertificateFile /etc/letsencrypt/live/multi/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/multi/privkey.pem
{% elif perun_api_tls_cert_same_as_host %}
    SSLCertificateFile /etc/perun/ssl/hostcert.pem
    SSLCertificateKeyFile /etc/perun/ssl/hostkey.pem
    SSLCertificateChainFile /etc/perun/ssl/hostchain.pem
{% else %}
    SSLCertificateFile /etc/perun/ssl/apicert.pem
    SSLCertificateKeyFile /etc/perun/ssl/apikey.pem
    SSLCertificateChainFile /etc/perun/ssl/apichain.pem
{% endif %}

    LogLevel warn ssl:warn rewrite:warn

    #### SECURITY

    # HTTP tracing
    TraceEnable off
    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-frame-options
    Header always set X-Frame-Options SAMEORIGIN
    # https://scotthelme.co.uk/hsts-the-missing-link-in-tls/
    Header always set Strict-Transport-Security "max-age=63072000"
    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-content-type-options
    Header always set X-Content-Type-Options nosniff
    # https://scotthelme.co.uk/hardening-your-http-response-headers/#x-xss-protection
    Header always set X-XSS-Protection "1; mode=block"
    # https://scotthelme.co.uk/a-new-security-header-referrer-policy/
    Header always set Referrer-Policy "no-referrer-when-downgrade"

    # Disable browser caching for our RPC resources
    Header always set Cache-Control "no-cache, no-store, max-age=0, must-revalidate" "expr=%{REQUEST_URI} =~ m#^/(.*)/rpc/(.*)$#"
    Header always set Pragma no-cache "expr=%{REQUEST_URI} =~ m#^/(.*)/rpc/(.*)$#"
    Header always set Expires 0 "expr=%{REQUEST_URI} =~ m#^/(.*)/rpc/(.*)$#"

{% if perun_apache_cors_headers_enabled and perun_rpc_cors_domains %}
    # CORS headers
    # match Origin header value against list of allowed domains
    SetEnvIfExpr "%{HTTP:Origin} in { {% for i in perun_rpc_cors_domains %}'{{ i }}'{% if not loop.last %},{% endif %}{% endfor %} }" cors_origin_matched
    # sets Access-Control-Allow-Origin and Vary if Origin value matched
    Header onsuccess unset Access-Control-Allow-Origin "env=cors_origin_matched"
    Header always set Access-Control-Allow-Origin "expr=%{HTTP:Origin}" "env=cors_origin_matched"
    # for pre-fly requests set more headers
    <If "-T reqenv('cors_origin_matched') && %{REQUEST_METHOD} == 'OPTIONS'">
        Header onsuccess unset Access-Control-Allow-Methods
        Header onsuccess unset Access-Control-Allow-Headers
        Header onsuccess unset Access-Control-Max-Age
        Header always set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header always set Access-Control-Allow-Headers "Authorization, Content-Type"
        Header always set Access-Control-Max-Age "86400"
    </If>
{% endif %}

    ####################################
    ##     RPC                      ####
    ####################################

    <Proxy "ajp://perun_rpc:8009/">
        ProxySet secret={{ perun_rpc_ajp_secret }}
    </Proxy>

    RewriteRule ^/(.*)/rpc/(.*)$ ajp://perun_rpc:8009/perun-rpc/$2 [P,QSA]

    ####################################
    ##     AuthN Methods            ####
    ####################################

    # HTTP Basic Authentication with username and password
    <LocationMatch "^/ba/">
        Options FollowSymLinks
        SSLRequireSSL
        SSLVerifyClient none
        AuthType basic
        AuthName "Perun RPC"
        <LimitExcept OPTIONS>
            Require valid-user
        </LimitExcept>
        AuthBasicProvider file
        AuthUserFile /etc/perun/apache/perun.passwd
        SetEnvIf _ .* AJP_EXTSOURCE=INTERNAL
        SetEnvIf _ .* AJP_EXTSOURCETYPE=cz.metacentrum.perun.core.impl.ExtSourceInternal
        SetEnvIf _ .* AJP_EXTSOURCELOA=0
    </LocationMatch>

{% if perun_apache_non_enabled %}
    <LocationMatch "^/non/">
        Options FollowSymLinks
        Require all granted
        SSLVerifyClient none
        SetEnvIf _ .* AJP_EXTSOURCE=LOCAL
        SetEnvIf _ .* AJP_EXTSOURCETYPE=cz.metacentrum.perun.core.impl.ExtSourceInternal
        SetEnvIf _ .* AJP_EXTSOURCELOA=0
    </LocationMatch>
{% endif %}

{% if perun_apache_kerberos_enabled %}
    # authentication with Kerberos
{% for krbrealm in perun_apache_kerberos_realms %}
    <LocationMatch "{{ krbrealm.urlmatch }}">
        Options FollowSymLinks
        SSLRequireSSL
        AuthType KerberosV5
        AuthName "Kerberos {{ krbrealm.name }}"
        Require valid-user
        Krb5Keytab /etc/perun/apache/krb5.http.keytab
        KrbAuthRealms {{ krbrealm.name }}
        KrbSaveCredentials Off
        KrbMethodNegotiate On
        KrbMethodK5Passwd On
        KrbServiceName Any
        KrbVerifyKDC Off
        SetEnvIf _ .* AJP_EXTSOURCE={{ krbrealm.name }}
        SetEnvIf _ .* AJP_EXTSOURCETYPE=cz.metacentrum.perun.core.impl.ExtSourceKerberos
        SetEnvIf _ .* AJP_EXTSOURCELOA=0
    </LocationMatch>
{% endfor %}
{% endif %}

    ###########################
    # OAuth2/OIDC             #
    ###########################

    OIDCOAuthIntrospectionEndpoint    {{ perun_apache_oauth_introspection_url }}
    OIDCOAuthTokenIntrospectionInterval {{ perun_apache_oauth_introspection_cache_timeout_seconds }}
    OIDCOAuthClientID      {{ perun_apache_oauth_client_id }}
    OIDCOAuthClientSecret  {{ perun_apache_oauth_client_secret }}
    OIDCOAuthAcceptTokenAs header
    OIDCOAuthAcceptTokenAs post
    OIDCOAuthAcceptTokenAs query
    OIDCCryptoPassphrase tcXtrGbIlRWXkrT7
    OIDCCacheEncrypt On
    <LocationMatch "^/oauth/">
        SSLRequireSSL
        Authtype oauth20
        Require valid-user
    </LocationMatch>

</VirtualHost>
